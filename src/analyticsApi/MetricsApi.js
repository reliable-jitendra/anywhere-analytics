/*
 * analytics
 *  **Note:** *Realogy hosts are deprecated (https://\\*.api.realogy.com). *We recommend the use of Anywhere API hosts (https://\\*.api.anywhere.re).**      **New Consumers** *- Use https://\\*.api.anywhere.re*      **Existing Consumers** *- https://\\**.api.realogy.com *will continue to work as-is, but plan to use https://\\*.api.anywhere.re host*.    ## Overview  This API is use to retrieve all the metric definitions, team metrics, office metrics, agent metrics, company metrics and listing metrics.  ## Use this API to  - fetch metric definitions. - fetch agent metrics. - get company metrics. - retrieve listing metrics. - get office and team metrics.   ## How Analytics API Works - Retrieve all the metric definitions. It can be filtered by related resources and metric names. - Retrieve listing metrics and agent metrics by day. - This API is used to fetch office, company and team metrics.    ## Generic Information - A response is always sent for a request. Make sure that your application does not time-out. - If the API is triggered again, avoid use of short retry periods to keep out of rate limiting scenarios.  ## Prerequisites To use this API in a production environment, you must have the following details:  - API Key. - Okta credentials. - Okta scope - [https://btt.realogyfg.com/analyticsapi](https://btt.realogyfg.com/analyticsapi).  ## How to Register and Create an Account To use the Analytics API, do the steps as follows:     1. Go to [Anywhere Developer Portal](https://developers.anywhere.re) and [Login](https://developers.anywhere.re/user/me). 2. See the API product features and requirements. 3. Use Get Access and get the API credentials. 4. Refer to [How it Works](https://developers.anywhere.re/docs/how-it-works) for more details. ## Sandbox Access   For Sandbox access, visit the Sandbox Portal URL <a href=\"https://developers.anywhere.re/add-app\" target=\"_blank\">Get Sandbox product access</a>.   ## Production Access    For Production access, visit the Production Portal URL <a href=\"https://developers.anywhere.re/add-app\" target=\"_blank\">Get Production product access</a>. 
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.31
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.Analytics) {
      root.Analytics = {};
    }
    root.Analytics.MetricsApi = factory(root.Analytics.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * Metrics service.
   * @module analyticsApi/MetricsApi
   * @version 1.0
   */

  /**
   * Constructs a new MetricsApi. 
   * @alias module:analyticsApi/MetricsApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the getAgentMetrics operation.
     * @callback module:analyticsApi/MetricsApi~getAgentMetricsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Agent metrics
     * Use this method to retrieve Agent metrics.
     * @param {Object} id Unique identifier of Agent. This should be the format - 2E9F9A20-6ABE-4F76-87ED-B8CB6CA02EFF
     * @param {Object} opts Optional parameters
     * @param {Object} opts.name Name of Agent metrics
     * @param {Object} opts.accept application/vnd.realogyfg.v1+json
     * @param {Object} opts.aggregationType Aggregation type of a metric. Possible value is total.
     * @param {Object} opts.source Source/ website for which metric data should be returned.
     * @param {Object} opts.startTime Earliest time for which metric data should be returned.
     * @param {Object} opts.endTime Latest time for which metric data should be returned.
     * @param {module:analyticsApi/MetricsApi~getAgentMetricsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.getAgentMetrics = function(id, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getAgentMetrics");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
        'name': opts['name'],
        'aggregationType': opts['aggregationType'],
        'source': opts['source'],
        'startTime': opts['startTime'],
        'endTime': opts['endTime'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Accept': opts['accept']
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = [];
      var returnType = null;

      return this.apiClient.callApi(
        '/agents/{id}/metrics', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getAgentMetricsByDay operation.
     * @callback module:analyticsApi/MetricsApi~getAgentMetricsByDayCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Agent metrics by day
     * Use this method to retrieve Agent metrics by day.
     * @param {Object} parentId Unique identifier of parent entity of Agent (office/company). This should be the format - 2E9F9A20-6ABE-4F76-87ED-B8CB6CA02EFF
     * @param {Object} parentType office/company.
     * @param {Object} opts Optional parameters
     * @param {Object} opts.name Name of the Agent metric. Can enter multiple values; but at least one is required.
     * @param {Object} opts.accept application/vnd.realogyfg.v1+json
     * @param {Object} opts.source Source/ website for which metric data should be returned.
     * @param {Object} opts.startTime Earliest time for which metric data should be returned.
     * @param {Object} opts.endTime Latest time for which metric data should be returned.
     * @param {module:analyticsApi/MetricsApi~getAgentMetricsByDayCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.getAgentMetricsByDay = function(parentId, parentType, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'parentId' is set
      if (parentId === undefined || parentId === null) {
        throw new Error("Missing the required parameter 'parentId' when calling getAgentMetricsByDay");
      }

      // verify the required parameter 'parentType' is set
      if (parentType === undefined || parentType === null) {
        throw new Error("Missing the required parameter 'parentType' when calling getAgentMetricsByDay");
      }


      var pathParams = {
      };
      var queryParams = {
        'parentId': parentId,
        'parentType': parentType,
        'name': opts['name'],
        'source': opts['source'],
        'startTime': opts['startTime'],
        'endTime': opts['endTime'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Accept': opts['accept']
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = [];
      var returnType = null;

      return this.apiClient.callApi(
        '/agents/metrics', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getCompanyMetrics operation.
     * @callback module:analyticsApi/MetricsApi~getCompanyMetricsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Company metrics
     * Use this method to retrieve Company metrics.
     * @param {Object} id Unique identifier of Company. This should be the format - 2E9F9A20-6ABE-4F76-87ED-B8CB6CA02EFF
     * @param {Object} opts Optional parameters
     * @param {Object} opts.name Name of Company metrics
     * @param {Object} opts.accept application/vnd.realogyfg.v1+json
     * @param {Object} opts.aggregationType Aggregation type of a metric. Possible value is total.
     * @param {Object} opts.source Source/ website for which metric data should be returned.
     * @param {Object} opts.startTime Earliest time for which metric data should be returned.
     * @param {Object} opts.endTime Latest time for which metric data should be returned.
     * @param {module:analyticsApi/MetricsApi~getCompanyMetricsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.getCompanyMetrics = function(id, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getCompanyMetrics");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
        'name': opts['name'],
        'aggregationType': opts['aggregationType'],
        'source': opts['source'],
        'startTime': opts['startTime'],
        'endTime': opts['endTime'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Accept': opts['accept']
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = [];
      var returnType = null;

      return this.apiClient.callApi(
        '/companies/{id}/metrics', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getListingMetrics operation.
     * @callback module:analyticsApi/MetricsApi~getListingMetricsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Listing metrics
     * Use this method to retrieve Listing metrics.
     * @param {Object} id Unique identifier of Listing. This should be the format - 2E9F9A20-6ABE-4F76-87ED-B8CB6CA02EFF
     * @param {Object} opts Optional parameters
     * @param {Object} opts.name Name of Listing metric
     * @param {Object} opts.accept application/vnd.realogyfg.v1+json
     * @param {Object} opts.aggregationType Aggregation type of a metric. Possible value is total.
     * @param {Object} opts.source Source/ website for which metric data should be returned.
     * @param {Object} opts.startTime Earliest time for which metric data should be returned.
     * @param {Object} opts.endTime Latest time for which metric data should be returned.
     * @param {module:analyticsApi/MetricsApi~getListingMetricsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.getListingMetrics = function(id, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getListingMetrics");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
        'name': opts['name'],
        'aggregationType': opts['aggregationType'],
        'source': opts['source'],
        'startTime': opts['startTime'],
        'endTime': opts['endTime'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Accept': opts['accept']
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = [];
      var returnType = null;

      return this.apiClient.callApi(
        '/listings/{id}/metrics', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getListingMetricsByDay operation.
     * @callback module:analyticsApi/MetricsApi~getListingMetricsByDayCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Listing metrics by day
     * Use this method to retrieve Listing metrics by day.
     * @param {Object} parentId Unique identifier of parent entity of listing (office/company/agent/team). This should be the format - 2E9F9A20-6ABE-4F76-87ED-B8CB6CA02EFF
     * @param {Object} parentType office/company/agent/team.
     * @param {Object} opts Optional parameters
     * @param {Object} opts.name Name of the listing metric. Can enter multiple values; but at least one is required. Currently \"TextLeadCount\" is not supported.
     * @param {Object} opts.accept application/vnd.realogyfg.v1+json
     * @param {Object} opts.source Source/ website for which metric data should be returned.
     * @param {Object} opts.startTime Earliest time for which metric data should be returned.
     * @param {Object} opts.endTime Latest time for which metric data should be returned.
     * @param {module:analyticsApi/MetricsApi~getListingMetricsByDayCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.getListingMetricsByDay = function(parentId, parentType, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'parentId' is set
      if (parentId === undefined || parentId === null) {
        throw new Error("Missing the required parameter 'parentId' when calling getListingMetricsByDay");
      }

      // verify the required parameter 'parentType' is set
      if (parentType === undefined || parentType === null) {
        throw new Error("Missing the required parameter 'parentType' when calling getListingMetricsByDay");
      }


      var pathParams = {
      };
      var queryParams = {
        'parentId': parentId,
        'parentType': parentType,
        'name': opts['name'],
        'source': opts['source'],
        'startTime': opts['startTime'],
        'endTime': opts['endTime'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Accept': opts['accept']
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = [];
      var returnType = null;

      return this.apiClient.callApi(
        '/listings/metrics', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getMetricsMetadata operation.
     * @callback module:analyticsApi/MetricsApi~getMetricsMetadataCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get metric definitions
     * Use this method to retrieve all metric definitions. It can be filtered by related resources and metric names. ***List of metric definitions will be restricted by the access level of the caller.***
     * @param {Object} resource Name of the resource
     * @param {Object} opts Optional parameters
     * @param {Object} opts.name List of metrics names
     * @param {Object} opts.accept application/vnd.realogyfg.v1+json
     * @param {module:analyticsApi/MetricsApi~getMetricsMetadataCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.getMetricsMetadata = function(resource, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'resource' is set
      if (resource === undefined || resource === null) {
        throw new Error("Missing the required parameter 'resource' when calling getMetricsMetadata");
      }


      var pathParams = {
        'resource': resource
      };
      var queryParams = {
        'name': opts['name'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Accept': opts['accept']
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = [];
      var returnType = null;

      return this.apiClient.callApi(
        '/metrics/metadata/{resource}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getOfficeMetrics operation.
     * @callback module:analyticsApi/MetricsApi~getOfficeMetricsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Office metrics
     * Use this method to retrieve Office metrics.
     * @param {Object} id Unique identifier of Office. This should be the format - 2E9F9A20-6ABE-4F76-87ED-B8CB6CA02EFF
     * @param {Object} opts Optional parameters
     * @param {Object} opts.name Name of Office metrics
     * @param {Object} opts.accept application/vnd.realogyfg.v1+json
     * @param {Object} opts.aggregationType Aggregation type of a metric. Possible value is total.
     * @param {Object} opts.source Source/ website for which metric data should be returned.
     * @param {Object} opts.startTime Earliest time for which metric data should be returned.
     * @param {Object} opts.endTime Latest time for which metric data should be returned.
     * @param {module:analyticsApi/MetricsApi~getOfficeMetricsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.getOfficeMetrics = function(id, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getOfficeMetrics");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
        'name': opts['name'],
        'aggregationType': opts['aggregationType'],
        'source': opts['source'],
        'startTime': opts['startTime'],
        'endTime': opts['endTime'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Accept': opts['accept']
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = [];
      var returnType = null;

      return this.apiClient.callApi(
        '/office/{id}/metrics', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getTeamMetrics operation.
     * @callback module:analyticsApi/MetricsApi~getTeamMetricsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Team metrics
     * Use this method to retrieve Team metrics.
     * @param {Object} id Unique identifier of Team. This should be the format - 2E9F9A20-6ABE-4F76-87ED-B8CB6CA02EFF
     * @param {Object} opts Optional parameters
     * @param {Object} opts.name Name of Team metrics
     * @param {Object} opts.accept application/vnd.realogyfg.v1+json
     * @param {Object} opts.aggregationType Aggregation type of a metric. Possible value is total.
     * @param {Object} opts.source Source/ website for which metric data should be returned.
     * @param {Object} opts.startTime Earliest time for which metric data should be returned.
     * @param {Object} opts.endTime Latest time for which metric data should be returned.
     * @param {module:analyticsApi/MetricsApi~getTeamMetricsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.getTeamMetrics = function(id, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getTeamMetrics");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
        'name': opts['name'],
        'aggregationType': opts['aggregationType'],
        'source': opts['source'],
        'startTime': opts['startTime'],
        'endTime': opts['endTime'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Accept': opts['accept']
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = [];
      var returnType = null;

      return this.apiClient.callApi(
        '/team/{id}/metrics', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
