/*
 * analytics
 *  **Note:** *Realogy hosts are deprecated (https://\\*.api.realogy.com). *We recommend the use of Anywhere API hosts (https://\\*.api.anywhere.re).**      **New Consumers** *- Use https://\\*.api.anywhere.re*      **Existing Consumers** *- https://\\**.api.realogy.com *will continue to work as-is, but plan to use https://\\*.api.anywhere.re host*.    ## Overview  This API is use to retrieve all the metric definitions, team metrics, office metrics, agent metrics, company metrics and listing metrics.  ## Use this API to  - fetch metric definitions. - fetch agent metrics. - get company metrics. - retrieve listing metrics. - get office and team metrics.   ## How Analytics API Works - Retrieve all the metric definitions. It can be filtered by related resources and metric names. - Retrieve listing metrics and agent metrics by day. - This API is used to fetch office, company and team metrics.    ## Generic Information - A response is always sent for a request. Make sure that your application does not time-out. - If the API is triggered again, avoid use of short retry periods to keep out of rate limiting scenarios.  ## Prerequisites To use this API in a production environment, you must have the following details:  - API Key. - Okta credentials. - Okta scope - [https://btt.realogyfg.com/analyticsapi](https://btt.realogyfg.com/analyticsapi).  ## How to Register and Create an Account To use the Analytics API, do the steps as follows:     1. Go to [Anywhere Developer Portal](https://developers.anywhere.re) and [Login](https://developers.anywhere.re/user/me). 2. See the API product features and requirements. 3. Use Get Access and get the API credentials. 4. Refer to [How it Works](https://developers.anywhere.re/docs/how-it-works) for more details. ## Sandbox Access   For Sandbox access, visit the Sandbox Portal URL <a href=\"https://developers.anywhere.re/add-app\" target=\"_blank\">Get Sandbox product access</a>.   ## Production Access    For Production access, visit the Production Portal URL <a href=\"https://developers.anywhere.re/add-app\" target=\"_blank\">Get Production product access</a>. 
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.31
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Analytics);
  }
}(this, function(expect, Analytics) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Analytics.MetricsApi();
  });

  describe('(package)', function() {
    describe('MetricsApi', function() {
      describe('getAgentMetrics', function() {
        it('should call getAgentMetrics successfully', function(done) {
          // TODO: uncomment, update parameter values for getAgentMetrics call
          /*
          var id = null;
          var opts = {};
          opts.name = null;
          opts.accept = null;
          opts.aggregationType = null;
          opts.source = null;
          opts.startTime = null;
          opts.endTime = null;

          instance.getAgentMetrics(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAgentMetricsByDay', function() {
        it('should call getAgentMetricsByDay successfully', function(done) {
          // TODO: uncomment, update parameter values for getAgentMetricsByDay call
          /*
          var parentId = null;
          var parentType = null;
          var opts = {};
          opts.name = null;
          opts.accept = null;
          opts.source = null;
          opts.startTime = null;
          opts.endTime = null;

          instance.getAgentMetricsByDay(parentId, parentType, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getCompanyMetrics', function() {
        it('should call getCompanyMetrics successfully', function(done) {
          // TODO: uncomment, update parameter values for getCompanyMetrics call
          /*
          var id = null;
          var opts = {};
          opts.name = null;
          opts.accept = null;
          opts.aggregationType = null;
          opts.source = null;
          opts.startTime = null;
          opts.endTime = null;

          instance.getCompanyMetrics(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getListingMetrics', function() {
        it('should call getListingMetrics successfully', function(done) {
          // TODO: uncomment, update parameter values for getListingMetrics call
          /*
          var id = null;
          var opts = {};
          opts.name = null;
          opts.accept = null;
          opts.aggregationType = null;
          opts.source = null;
          opts.startTime = null;
          opts.endTime = null;

          instance.getListingMetrics(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getListingMetricsByDay', function() {
        it('should call getListingMetricsByDay successfully', function(done) {
          // TODO: uncomment, update parameter values for getListingMetricsByDay call
          /*
          var parentId = null;
          var parentType = null;
          var opts = {};
          opts.name = null;
          opts.accept = null;
          opts.source = null;
          opts.startTime = null;
          opts.endTime = null;

          instance.getListingMetricsByDay(parentId, parentType, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getMetricsMetadata', function() {
        it('should call getMetricsMetadata successfully', function(done) {
          // TODO: uncomment, update parameter values for getMetricsMetadata call
          /*
          var resource = null;
          var opts = {};
          opts.name = null;
          opts.accept = null;

          instance.getMetricsMetadata(resource, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getOfficeMetrics', function() {
        it('should call getOfficeMetrics successfully', function(done) {
          // TODO: uncomment, update parameter values for getOfficeMetrics call
          /*
          var id = null;
          var opts = {};
          opts.name = null;
          opts.accept = null;
          opts.aggregationType = null;
          opts.source = null;
          opts.startTime = null;
          opts.endTime = null;

          instance.getOfficeMetrics(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getTeamMetrics', function() {
        it('should call getTeamMetrics successfully', function(done) {
          // TODO: uncomment, update parameter values for getTeamMetrics call
          /*
          var id = null;
          var opts = {};
          opts.name = null;
          opts.accept = null;
          opts.aggregationType = null;
          opts.source = null;
          opts.startTime = null;
          opts.endTime = null;

          instance.getTeamMetrics(id, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
